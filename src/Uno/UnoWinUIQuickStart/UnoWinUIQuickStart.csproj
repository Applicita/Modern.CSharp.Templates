<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
		<!--#if (Windows)
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('Windows')) or '$(EnableWindowsTargeting)' == 'true'">$(TargetFrameworks);net7.0-windows10.0.18362</TargetFrameworks>
#endif -->
		<TargetFrameworks>$(TargetFrameworks);$libarybasetargetframework$</TargetFrameworks><!-- 
			This condition is used when building under Linux. If you're not building under
			 Linux, you can remove this line and the conditions below.
		--><_CanUseMobileTargets Condition="!$([MSBuild]::IsOSPlatform('Linux'))">true</_CanUseMobileTargets>

		<!--#if (android)
		<TargetFrameworks Condition="'$(_CanUseMobileTargets)'=='true'">$(TargetFrameworks);net7.0-android</TargetFrameworks>
#endif -->
		<!--#if (ios)
		<TargetFrameworks Condition="'$(_CanUseMobileTargets)'=='true'">$(TargetFrameworks);net7.0-ios</TargetFrameworks>
#endif -->
		<!--#if (maccatalyst)
		<TargetFrameworks Condition="'$(_CanUseMobileTargets)'=='true'">$(TargetFrameworks);net7.0-maccatalyst</TargetFrameworks>
#endif -->
		<!--#if (macos)
		<TargetFrameworks Condition="'$(_CanUseMobileTargets)'=='true'">$(TargetFrameworks);net7.0-macos</TargetFrameworks>
#endif -->
		
		<DefaultLanguage>en</DefaultLanguage><SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">14.2</SupportedOSPlatformVersion><SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion><SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion><SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.18362.0</SupportedOSPlatformVersion><TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.18362.0</TargetPlatformMinVersion></PropertyGroup>
  <PropertyGroup>
    <!-- Ensures the .xr.xml files are generated in a proper layout folder -->
    <GenerateLibraryLayout>true</GenerateLibraryLayout>
  </PropertyGroup>
  <PropertyGroup>
    <Nullable>enable</Nullable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <AnalysisLevel>preview-All</AnalysisLevel>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="5.0.0" />
    <PackageReference Include="Uno.Core.Extensions.Logging.Singleton" Version="4.0.1" />
    <PackageReference Include="Uno.WinUI" Version="4.7.37" />
	<PackageReference Include="CSharpMarkup.WinUI" Version="0.8.3-dev.7" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)'=='net7.0-windows10.0.18362'">
	<PackageReference Include="Microsoft.WindowsAppSDK" Version="1.2.221209.1" />
	<FrameworkReference Update="Microsoft.Windows.SDK.NET.Ref" RuntimeFrameworkVersion="10.0.22621.28" />
	<FrameworkReference Update="Microsoft.Windows.SDK.NET.Ref" TargetingPackVersion="10.0.22621.28" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)'!='net7.0-windows10.0.18362'">
    <Content Include="Assets\**" />
    <Page Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
    <ApplicationDefinition Include="App.xaml" Condition="exists('App.xaml')" />
    <Compile Update="**\*.xaml.cs">
      <DependentUpon>%(Filename)</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <UpToDateCheckInput Include="**\*.xaml" Exclude="bin\**\*.xaml;obj\**\*.xaml" />
    <Compile Update="**\*.logic.cs">
      <DependentUpon>$([System.String]::Copy(%(Filename)).Replace('.logic', '.cs'))</DependentUpon>
    </Compile>
  </ItemGroup>
</Project>